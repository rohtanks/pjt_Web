<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 클래스 선언에 애노테이션을 이용해서 컨트롤러 작성 가능 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 뷰 처리 방법에 대한 설정 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- WEB-INF는 브라우저에서 절대 접근할 수 없는 경로, 컨트롤러를 통해서만 접근 -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- <annotation-driven /> 과 결합해서 해당 패키지 내의 애노테이션 처리된 클래스를 자동으로 인식 -->
	<!-- component-scan 사용시 context 설정 방법 -->
	<!-- Service, Repository - root-context -->
	<!-- Controller - servlet-context -->
	<context:component-scan base-package="com.test.web" />
	<!-- <context:component-scan base-package="com.test.persistence"></context:component-scan> -->
	
	
	
</beans:beans>
